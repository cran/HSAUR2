
R version 2.9.0 (2009-04-17)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###################################################
> ### code chunk number 1: setup
> ###################################################
> rm(list = ls())
> if (!file.exists("tables")) dir.create("tables")
> set.seed(290875)
> options(prompt = "R> ", continue = "+  ",
+     width = 63, # digits = 4,
+     show.signif.stars = FALSE,
+     SweaveHooks = list(leftpar = function()
+         par(mai = par("mai") * c(1, 1.05, 1, 1)),
+         bigleftpar = function()
+         par(mai = par("mai") * c(1, 1.7, 1, 1))))
R> HSAURpkg <- require("HSAUR2")
Loading required package: HSAUR2
Loading required package: lattice
Loading required package: MASS
Loading required package: scatterplot3d
R> if (!HSAURpkg) stop("cannot load package ", sQuote("HSAUR2"))
R> rm(HSAURpkg)
R>  ### </FIXME> hm, R-2.4.0 --vanilla seems to need this
R> a <- Sys.setlocale("LC_ALL", "C")
R>  ### </FIXME>
R> book <- TRUE
R> refs <- cbind(c("AItR", "DAGD", "SI", "CI", "ANOVA", "MLR", "GLM",
+                  "DE", "RP", "GAM", "SA", "ALDI", "ALDII", "SIMC", "MA", "PCA",
+                  "MDS", "CA"), 1:18)
R> ch <- function(x) {
+      ch <- refs[which(refs[,1] == x),]
+      if (book) {
+          return(paste("Chapter~\\\\ref{", ch[1], "}", sep = ""))
+      } else {
+          return(paste("Chapter~", ch[2], sep = ""))
+      }
+  }
R> if (file.exists("deparse.R"))
+      source("deparse.R")
R> setHook(packageEvent("lattice", "attach"), function(...) {
+      lattice.options(default.theme =
+          function()
+              standard.theme("pdf", color = FALSE))
+      })
R> 
R> 
R> ###################################################
R> ### code chunk number 2: singlebook
R> ###################################################
R> book <- FALSE
R> 
R> 
R> ###################################################
R> ### code chunk number 3: GLM-backpain-tab
R> ###################################################
R> data("backpain", package = "HSAUR2")
R> int <- interaction(backpain$suburban, backpain$driver)
R> foo <- function(i) {
+      x <- xtabs(~ status + int, data = backpain, subset = i)
+      x[1,] %*% t(x[2,])
+  }
R> tmp <- tapply(1:nrow(backpain), backpain$ID, foo)
R> tab <- 0
R> for (i in tmp) tab <- tab + i
R> ltab <- apply(tab, 1, function(x) paste(x, collapse = " & "))
R> rs <- rowSums(tab)
R> cs <- colSums(tab)
R> xtab <- c("\\begin{table}",
+            "\\begin{center}",
+            paste("\\caption{\\Robject{backpain} data. Number of drivers (D) and non-drivers ($\\bar{\\text{D}}$),",
+                             "suburban (S) and city inhabitants ($\\bar{\\text{S}}$) either",
+                             "suffering from a herniated disc (cases) or not (controls). \\label{GLM-backpain-tab}}"),
+            "\\begin{tabular}{rrrrrrrr}",
+            "\\hline",
+            " & & & \\multicolumn{4}{c}{Controls} & \\\\",
+            " & & & \\multicolumn{2}{c}{$\\bar{\\text{D}}$} & \\multicolumn{2}{c}{D} & \\\\",
+            " & & & $\\bar{\\text{S}}$ & S & $\\bar{\\text{S}}$ & S & Total \\\\ \\hline",
+            paste("      & $\\bar{\\text{D}}$ & $\\bar{\\text{S}}$ &", ltab[1], "&", rs[1], "\\\\" ),
+            paste("Cases & & S &", ltab[2], " & ", rs[2], "\\\\"),
+            paste(" & D & $\\bar{\\text{S}}$ &", ltab[3], " & ", rs[3], "\\\\"),
+            paste(" & & S &", ltab[4], " & ", rs[4], "\\\\"),
+            "\\hline",
+            paste(" & \\multicolumn{2}{c}{Total} & ", paste(cs, collapse = "&"), "&", sum(tab), "\\\\"),
+            "\\hline",
+            "\\end{tabular}",
+            "\\end{center}",
+            "\\end{table}")
R> writeLines(xtab)
\begin{table}
\begin{center}
\caption{\Robject{backpain} data. Number of drivers (D) and non-drivers ($\bar{\text{D}}$), suburban (S) and city inhabitants ($\bar{\text{S}}$) either suffering from a herniated disc (cases) or not (controls). \label{GLM-backpain-tab}}
\begin{tabular}{rrrrrrrr}
\hline
 & & & \multicolumn{4}{c}{Controls} & \\
 & & & \multicolumn{2}{c}{$\bar{\text{D}}$} & \multicolumn{2}{c}{D} & \\
 & & & $\bar{\text{S}}$ & S & $\bar{\text{S}}$ & S & Total \\ \hline
      & $\bar{\text{D}}$ & $\bar{\text{S}}$ & 9 & 0 & 10 & 7 & 26 \\
Cases & & S & 2 & 2 & 1 & 1  &  6 \\
 & D & $\bar{\text{S}}$ & 14 & 1 & 20 & 29  &  64 \\
 & & S & 22 & 4 & 32 & 63  &  121 \\
\hline
 & \multicolumn{2}{c}{Total} &  47&7&63&100 & 217 \\
\hline
\end{tabular}
\end{center}
\end{table}
R> 
R> 
R> ###################################################
R> ### code chunk number 4: GLM-plasma-plot
R> ###################################################
R> data("plasma", package = "HSAUR2")
R> layout(matrix(1:2, ncol = 2))
R> cdplot(ESR ~ fibrinogen, data = plasma)
R> cdplot(ESR ~ globulin, data = plasma)
R> 
R> 
R> ###################################################
R> ### code chunk number 5: GLM-plasma-fit1
R> ###################################################
R> plasma_glm_1 <- glm(ESR ~ fibrinogen, data = plasma,
+                      family = binomial())
R> 
R> 
R> ###################################################
R> ### code chunk number 6: GLM-plasma-summary-1
R> ###################################################
R> summary(plasma_glm_1)

Call:
glm(formula = ESR ~ fibrinogen, family = binomial(), data = plasma)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-0.9298  -0.5399  -0.4382  -0.3356   2.4794  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)
(Intercept)  -6.8451     2.7703  -2.471   0.0135
fibrinogen    1.8271     0.9009   2.028   0.0425

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 30.885  on 31  degrees of freedom
Residual deviance: 24.840  on 30  degrees of freedom
AIC: 28.840

Number of Fisher Scoring iterations: 5

R> 
R> 
R> ###################################################
R> ### code chunk number 7: GLM-plasma-confint
R> ###################################################
R> ci <- confint(plasma_glm_1)["fibrinogen",]
Waiting for profiling to be done...
R> 
R> 
R> ###################################################
R> ### code chunk number 8: GLM-plasma-confint
R> ###################################################
R> confint(plasma_glm_1, parm = "fibrinogen")
Waiting for profiling to be done...
    2.5 %    97.5 % 
0.3387619 3.9984921 
R> 
R> 
R> ###################################################
R> ### code chunk number 9: GLM-plasma-confint
R> ###################################################
R> print(ci)
    2.5 %    97.5 % 
0.3387619 3.9984921 
R> 
R> 
R> ###################################################
R> ### code chunk number 10: GLM-plasma-exp
R> ###################################################
R> exp(coef(plasma_glm_1)["fibrinogen"])
fibrinogen 
  6.215715 
R> 
R> 
R> ###################################################
R> ### code chunk number 11: GLM-plasma-exp-ci
R> ###################################################
R> ci <- exp(confint(plasma_glm_1, parm = "fibrinogen"))
Waiting for profiling to be done...
R> 
R> 
R> ###################################################
R> ### code chunk number 12: GLM-plasma-exp-ci
R> ###################################################
R> exp(confint(plasma_glm_1, parm = "fibrinogen"))
Waiting for profiling to be done...
    2.5 %    97.5 % 
 1.403209 54.515884 
R> 
R> 
R> ###################################################
R> ### code chunk number 13: GLM-plasma-exp-ci
R> ###################################################
R> print(ci)
    2.5 %    97.5 % 
 1.403209 54.515884 
R> 
R> 
R> ###################################################
R> ### code chunk number 14: GLM-plasma-fit2
R> ###################################################
R> plasma_glm_2 <- glm(ESR ~ fibrinogen + globulin,
+      data = plasma, family = binomial())
R> 
R> 
R> ###################################################
R> ### code chunk number 15: GLM-plasma-summary-2
R> ###################################################
R> summary(plasma_glm_2)

Call:
glm(formula = ESR ~ fibrinogen + globulin, family = binomial(), 
    data = plasma)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-0.9683  -0.6122  -0.3458  -0.2116   2.2636  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)
(Intercept) -12.7921     5.7963  -2.207   0.0273
fibrinogen    1.9104     0.9710   1.967   0.0491
globulin      0.1558     0.1195   1.303   0.1925

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 30.885  on 31  degrees of freedom
Residual deviance: 22.971  on 29  degrees of freedom
AIC: 28.971

Number of Fisher Scoring iterations: 5

R> 
R> 
R> ###################################################
R> ### code chunk number 16: GLM-plasma-anova-hide
R> ###################################################
R> plasma_anova <- anova(plasma_glm_1, plasma_glm_2, test = "Chisq")
R> 
R> 
R> ###################################################
R> ### code chunk number 17: GLM-plasma-anova
R> ###################################################
R> anova(plasma_glm_1, plasma_glm_2, test = "Chisq")
Analysis of Deviance Table

Model 1: ESR ~ fibrinogen
Model 2: ESR ~ fibrinogen + globulin
  Resid. Df Resid. Dev Df Deviance P(>|Chi|)
1        30    24.8404                      
2        29    22.9711  1   1.8692    0.1716
R> 
R> 
R> ###################################################
R> ### code chunk number 18: GLM-plasma-predict
R> ###################################################
R> prob <- predict(plasma_glm_2, type = "response")
R> 
R> 
R> ###################################################
R> ### code chunk number 19: GLM-plasma-bubble
R> ###################################################
R> plot(globulin ~ fibrinogen, data = plasma, xlim = c(2, 6),
+       ylim = c(25, 55), pch = ".")
R> symbols(plasma$fibrinogen, plasma$globulin, circles = prob,
+          add = TRUE)
R> 
R> 
R> ###################################################
R> ### code chunk number 20: GLM-womensrole-fit1
R> ###################################################
R> data("womensrole", package = "HSAUR2")
R> fm1 <- cbind(agree, disagree) ~ gender + education
R> womensrole_glm_1 <- glm(fm1, data = womensrole,
+                          family = binomial())
R> 
R> 
R> ###################################################
R> ### code chunk number 21: GLM-womensrole-summary-1
R> ###################################################
R> summary(womensrole_glm_1)

Call:
glm(formula = fm1, family = binomial(), data = womensrole)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-2.72544  -0.86302  -0.06525   0.84340   3.13315  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)
(Intercept)   2.50937    0.18389  13.646   <2e-16
genderFemale -0.01145    0.08415  -0.136    0.892
education    -0.27062    0.01541 -17.560   <2e-16

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 451.722  on 40  degrees of freedom
Residual deviance:  64.007  on 38  degrees of freedom
AIC: 208.07

Number of Fisher Scoring iterations: 4

R> 
R> 
R> ###################################################
R> ### code chunk number 22: GLM-womensrole-probfit
R> ###################################################
R> role.fitted1 <- predict(womensrole_glm_1, type = "response")
R> 
R> 
R> ###################################################
R> ### code chunk number 23: GLM-plot-setup
R> ###################################################
R> myplot <- function(role.fitted) {
+      f <- womensrole$gender == "Female"
+      plot(womensrole$education, role.fitted, type = "n",
+           ylab = "Probability of agreeing",
+           xlab = "Education", ylim = c(0,1))
+      lines(womensrole$education[!f], role.fitted[!f], lty = 1)
+      lines(womensrole$education[f], role.fitted[f], lty = 2)
+      lgtxt <- c("Fitted (Males)", "Fitted (Females)")
+      legend("topright", lgtxt, lty = 1:2, bty = "n")
+      y <- womensrole$agree / (womensrole$agree +
+                                womensrole$disagree)
+      text(womensrole$education, y, ifelse(f, "\\VE", "\\MA"),
+           family = "HersheySerif", cex = 1.25)
+  }
R> 
R> 
R> ###################################################
R> ### code chunk number 24: GLM-role-fitted1
R> ###################################################
R> myplot(role.fitted1)
R> 
R> 
R> ###################################################
R> ### code chunk number 25: GLM-womensrole-fit2
R> ###################################################
R> fm2 <- cbind(agree,disagree) ~ gender * education
R> womensrole_glm_2 <- glm(fm2, data = womensrole,
+                          family = binomial())
R> 
R> 
R> ###################################################
R> ### code chunk number 26: GLM-womensrole-summary-2
R> ###################################################
R> summary(womensrole_glm_2)

Call:
glm(formula = fm2, family = binomial(), data = womensrole)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-2.39097  -0.88062   0.01532   0.72783   2.45262  

Coefficients:
                       Estimate Std. Error z value Pr(>|z|)
(Intercept)             2.09820    0.23550   8.910  < 2e-16
genderFemale            0.90474    0.36007   2.513  0.01198
education              -0.23403    0.02019 -11.592  < 2e-16
genderFemale:education -0.08138    0.03109  -2.617  0.00886

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 451.722  on 40  degrees of freedom
Residual deviance:  57.103  on 37  degrees of freedom
AIC: 203.16

Number of Fisher Scoring iterations: 4

R> 
R> 
R> ###################################################
R> ### code chunk number 27: GLM-role-fitted2
R> ###################################################
R> role.fitted2 <- predict(womensrole_glm_2, type = "response")
R> myplot(role.fitted2)
R> 
R> 
R> ###################################################
R> ### code chunk number 28: GLM-role-plot2
R> ###################################################
R> res <- residuals(womensrole_glm_2, type = "deviance")
R> plot(predict(womensrole_glm_2), res,
+       xlab="Fitted values", ylab = "Residuals",
+       ylim = max(abs(res)) * c(-1,1))
R> abline(h = 0, lty = 2)
R> 
R> 
R> ###################################################
R> ### code chunk number 29: GLM-polyps-fit1
R> ###################################################
R> data("polyps", package = "HSAUR2")
R> polyps_glm_1 <- glm(number ~ treat + age, data = polyps,
+                      family = poisson())
R> 
R> 
R> ###################################################
R> ### code chunk number 30: GLM-polyps-summary-1
R> ###################################################
R> summary(polyps_glm_1)

Call:
glm(formula = number ~ treat + age, family = poisson(), data = polyps)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-4.2212  -3.0536  -0.1802   1.4459   5.8301  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)
(Intercept)  4.529024   0.146872   30.84  < 2e-16
treatdrug   -1.359083   0.117643  -11.55  < 2e-16
age         -0.038830   0.005955   -6.52 7.02e-11

(Dispersion parameter for poisson family taken to be 1)

    Null deviance: 378.66  on 19  degrees of freedom
Residual deviance: 179.54  on 17  degrees of freedom
AIC: 273.88

Number of Fisher Scoring iterations: 5

R> 
R> 
R> ###################################################
R> ### code chunk number 31: GLM-polyp-quasi
R> ###################################################
R> polyps_glm_2 <- glm(number ~ treat + age, data = polyps,
+                      family = quasipoisson())
R> summary(polyps_glm_2)

Call:
glm(formula = number ~ treat + age, family = quasipoisson(), 
    data = polyps)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-4.2212  -3.0536  -0.1802   1.4459   5.8301  

Coefficients:
            Estimate Std. Error t value Pr(>|t|)
(Intercept)  4.52902    0.48106   9.415 3.72e-08
treatdrug   -1.35908    0.38533  -3.527  0.00259
age         -0.03883    0.01951  -1.991  0.06284

(Dispersion parameter for quasipoisson family taken to be 10.72805)

    Null deviance: 378.66  on 19  degrees of freedom
Residual deviance: 179.54  on 17  degrees of freedom
AIC: NA

Number of Fisher Scoring iterations: 5

R> 
R> 
R> 
