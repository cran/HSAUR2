
R version 2.9.0 (2009-04-17)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###################################################
> ### code chunk number 1: setup
> ###################################################
> rm(list = ls())
> if (!file.exists("tables")) dir.create("tables")
> set.seed(290875)
> options(prompt = "R> ", continue = "+  ",
+     width = 63, # digits = 4,
+     show.signif.stars = FALSE,
+     SweaveHooks = list(leftpar = function()
+         par(mai = par("mai") * c(1, 1.05, 1, 1)),
+         bigleftpar = function()
+         par(mai = par("mai") * c(1, 1.7, 1, 1))))
R> HSAURpkg <- require("HSAUR2")
Loading required package: HSAUR2
Loading required package: lattice
Loading required package: MASS
Loading required package: scatterplot3d
R> if (!HSAURpkg) stop("cannot load package ", sQuote("HSAUR2"))
R> rm(HSAURpkg)
R>  ### </FIXME> hm, R-2.4.0 --vanilla seems to need this
R> a <- Sys.setlocale("LC_ALL", "C")
R>  ### </FIXME>
R> book <- TRUE
R> refs <- cbind(c("AItR", "DAGD", "SI", "CI", "ANOVA", "MLR", "GLM",
+                  "DE", "RP", "GAM", "SA", "ALDI", "ALDII", "SIMC", "MA", "PCA",
+                  "MDS", "CA"), 1:18)
R> ch <- function(x) {
+      ch <- refs[which(refs[,1] == x),]
+      if (book) {
+          return(paste("Chapter~\\\\ref{", ch[1], "}", sep = ""))
+      } else {
+          return(paste("Chapter~", ch[2], sep = ""))
+      }
+  }
R> if (file.exists("deparse.R"))
+      source("deparse.R")
R> setHook(packageEvent("lattice", "attach"), function(...) {
+      lattice.options(default.theme =
+          function()
+              standard.theme("pdf", color = FALSE))
+      })
R> 
R> 
R> ###################################################
R> ### code chunk number 2: singlebook
R> ###################################################
R> book <- FALSE
R> 
R> 
R> ###################################################
R> ### code chunk number 3: SIMC-setup
R> ###################################################
R> library("multcomp")
Loading required package: mvtnorm
Loading required package: survival
Loading required package: splines
R> library("coin")
Loading required package: modeltools
Loading required package: stats4
R> library("sandwich")
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

R> library("lme4")
Loading required package: Matrix

Attaching package: 'Matrix'


	The following object(s) are masked from package:stats :

	 xtabs 


	The following object(s) are masked from package:base :

	 rcond 


Attaching package: 'lme4'


	The following object(s) are masked from package:modeltools :

	 refit 


	The following object(s) are masked from package:stats4 :

	 BIC 

R> 
R> 
R> ###################################################
R> ### code chunk number 4: SIMC-alpha-data-figure
R> ###################################################
R> n <- table(alpha$alength)
R> levels(alpha$alength) <- abbreviate(levels(alpha$alength), 4)
R> plot(elevel ~ alength, data = alpha, varwidth = TRUE,
+       ylab = "Expression Level",
+       xlab = "NACP-REP1 Allele Length")
R> axis(3, at = 1:3, labels = paste("n = ", n))
R> 
R> 
R> ###################################################
R> ### code chunk number 5: SIMC-alpha-aov-tukey
R> ###################################################
R> library("multcomp")
R> amod <- aov(elevel ~ alength, data = alpha)
R> amod_glht <- glht(amod, linfct = mcp(alength = "Tukey"))
R> 
R> 
R> ###################################################
R> ### code chunk number 6: SIMC-alpha-aov-tukey-K
R> ###################################################
R> amod_glht$linfct
            (Intercept) alengthintr alengthlong
intr - shrt           0           1           0
long - shrt           0           0           1
long - intr           0          -1           1
attr(,"type")
[1] "Tukey"
R> 
R> 
R> ###################################################
R> ### code chunk number 7: SIMC-alpha-aov-coefvcov
R> ###################################################
R> coef(amod_glht)
intr - shrt long - shrt long - intr 
  0.4341523   1.1887500   0.7545977 
R> vcov(amod_glht)
            intr - shrt long - shrt long - intr
intr - shrt  0.14717604   0.1041001 -0.04307591
long - shrt  0.10410012   0.2706603  0.16656020
long - intr -0.04307591   0.1665602  0.20963611
R> 
R> 
R> ###################################################
R> ### code chunk number 8: SIMC-alpha-aov-results
R> ###################################################
R> confint(amod_glht)

	 Simultaneous Confidence Intervals

Multiple Comparisons of Means: Tukey Contrasts


Fit: aov(formula = elevel ~ alength, data = alpha)

Estimated Quantile = 2.3718
95% family-wise confidence level
 

Linear Hypotheses:
                 Estimate lwr      upr     
intr - shrt == 0  0.43415 -0.47574  1.34405
long - shrt == 0  1.18875 -0.04516  2.42266
long - intr == 0  0.75460 -0.33134  1.84054

R> summary(amod_glht)

	 Simultaneous Tests for General Linear Hypotheses

Multiple Comparisons of Means: Tukey Contrasts


Fit: aov(formula = elevel ~ alength, data = alpha)

Linear Hypotheses:
                 Estimate Std. Error t value Pr(>|t|)
intr - shrt == 0   0.4342     0.3836   1.132   0.4924
long - shrt == 0   1.1887     0.5203   2.285   0.0615
long - intr == 0   0.7546     0.4579   1.648   0.2270
(Adjusted p values reported -- single-step method)

R> 
R> 
R> ###################################################
R> ### code chunk number 9: SIMC-aov-tukey-sandwich
R> ###################################################
R> amod_glht_sw <- glht(amod, linfct = mcp(alength = "Tukey"),
+                       vcov = sandwich)
R> summary(amod_glht_sw)

	 Simultaneous Tests for General Linear Hypotheses

Multiple Comparisons of Means: Tukey Contrasts


Fit: aov(formula = elevel ~ alength, data = alpha)

Linear Hypotheses:
                 Estimate Std. Error t value Pr(>|t|)
intr - shrt == 0   0.4342     0.4239   1.024   0.5594
long - shrt == 0   1.1887     0.4432   2.682   0.0227
long - intr == 0   0.7546     0.3184   2.370   0.0501
(Adjusted p values reported -- single-step method)

R> 
R> 
R> ###################################################
R> ### code chunk number 10: SIMC-alpha-confint-plot
R> ###################################################
R> par(mai = par("mai") * c(1, 2.1, 1, 0.5))
R> layout(matrix(1:2, ncol = 2))
R> ci1 <- confint(glht(amod, linfct = mcp(alength = "Tukey")))
R> ci2 <- confint(glht(amod, linfct = mcp(alength = "Tukey"),
+                 vcov = sandwich))
R> ox <- expression(paste("Tukey (ordinary ", bold(S)[n], ")"))
R> sx <- expression(paste("Tukey (sandwich ", bold(S)[n], ")"))
R> plot(ci1, xlim = c(-0.6, 2.6), main = ox,
+      xlab = "Difference", ylim = c(0.5, 3.5))
R> plot(ci2, xlim = c(-0.6, 2.6), main = sx,
+      xlab = "Difference", ylim = c(0.5, 3.5))
R> 
R> 
R> ###################################################
R> ### code chunk number 11: SIMC-trees-setup
R> ###################################################
R> trees513 <- subset(trees513, !species %in% c("fir", "ash/maple/elm/lime", "softwood (other)"))
R> trees513$species <- trees513$species[,drop = TRUE]
R> levels(trees513$species)[nlevels(trees513$species)] <- "hardwood"
R> 
R> 
R> ###################################################
R> ### code chunk number 12: SIMC-trees-lmer
R> ###################################################
R> mmod <- lmer(damage ~ species - 1 + (1 | lattice / plot),
+                data = trees513, family = binomial())
R> K <- diag(length(fixef(mmod)))
R> K
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    0    0    0    0
[2,]    0    1    0    0    0
[3,]    0    0    1    0    0
[4,]    0    0    0    1    0
[5,]    0    0    0    0    1
R> 
R> 
R> ###################################################
R> ### code chunk number 13: SIMC-trees-K
R> ###################################################
R> colnames(K) <- rownames(K) <-
+      paste(gsub("species", "", names(fixef(mmod))),
+            " (", table(trees513$species), ")", sep = "")
R> K
               spruce (119) pine (823) beech (266) oak (1258)
spruce (119)              1          0           0          0
pine (823)                0          1           0          0
beech (266)               0          0           1          0
oak (1258)                0          0           0          1
hardwood (191)            0          0           0          0
               hardwood (191)
spruce (119)                0
pine (823)                  0
beech (266)                 0
oak (1258)                  0
hardwood (191)              1
R> 
R> 
R> ###################################################
R> ### code chunk number 14: SIMC-trees-ci
R> ###################################################
R> ci <- confint(glht(mmod, linfct = K))
R> ci$confint <- 1 - binomial()$linkinv(ci$confint)
R> ci$confint[,2:3] <- ci$confint[,3:2]
R> 
R> 
R> ###################################################
R> ### code chunk number 15: SIMC-trees-plot
R> ###################################################
R> plot(ci, xlab = "Probability of Damage Caused by Browsing",
+       xlim = c(0, 0.5), main = "", ylim = c(0.5, 5.5))
R> 
R> 
R> ###################################################
R> ### code chunk number 16: SIMC-clouds-confband
R> ###################################################
R> confband <- function(subset, main) {
+      mod <- lm(rainfall ~ sne, data = clouds, subset = subset)
+      sne_grid <- seq(from = 1.5, to = 4.5, by = 0.25)
+      K <- cbind(1, sne_grid)
+      sne_ci <- confint(glht(mod, linfct = K))
+      plot(rainfall ~ sne, data = clouds, subset = subset,
+           xlab = "S-Ne criterion", main = main,
+           xlim = range(clouds$sne),
+           ylim = range(clouds$rainfall))
+      abline(mod)
+      lines(sne_grid, sne_ci$confint[,2], lty = 2)
+      lines(sne_grid, sne_ci$confint[,3], lty = 2)
+  }
R> 
R> 
R> ###################################################
R> ### code chunk number 17: SIMC-clouds-lmplot
R> ###################################################
R> layout(matrix(1:2, ncol = 2))
R> confband(clouds$seeding == "no", main = "No seeding")
R> confband(clouds$seeding == "yes", main = "Seeding")
R> 
R> 
R> 
