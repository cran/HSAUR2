
R version 2.9.0 (2009-04-17)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###################################################
> ### code chunk number 1: setup
> ###################################################
> rm(list = ls())
> if (!file.exists("tables")) dir.create("tables")
> set.seed(290875)
> options(prompt = "R> ", continue = "+  ",
+     width = 63, # digits = 4,
+     show.signif.stars = FALSE,
+     SweaveHooks = list(leftpar = function()
+         par(mai = par("mai") * c(1, 1.05, 1, 1)),
+         bigleftpar = function()
+         par(mai = par("mai") * c(1, 1.7, 1, 1))))
R> HSAURpkg <- require("HSAUR2")
Loading required package: HSAUR2
Loading required package: lattice
Loading required package: MASS
Loading required package: scatterplot3d
R> if (!HSAURpkg) stop("cannot load package ", sQuote("HSAUR2"))
R> rm(HSAURpkg)
R>  ### </FIXME> hm, R-2.4.0 --vanilla seems to need this
R> a <- Sys.setlocale("LC_ALL", "C")
R>  ### </FIXME>
R> book <- TRUE
R> refs <- cbind(c("AItR", "DAGD", "SI", "CI", "ANOVA", "MLR", "GLM",
+                  "DE", "RP", "GAM", "SA", "ALDI", "ALDII", "SIMC", "MA", "PCA",
+                  "MDS", "CA"), 1:18)
R> ch <- function(x) {
+      ch <- refs[which(refs[,1] == x),]
+      if (book) {
+          return(paste("Chapter~\\\\ref{", ch[1], "}", sep = ""))
+      } else {
+          return(paste("Chapter~", ch[2], sep = ""))
+      }
+  }
R> if (file.exists("deparse.R"))
+      source("deparse.R")
R> setHook(packageEvent("lattice", "attach"), function(...) {
+      lattice.options(default.theme =
+          function()
+              standard.theme("pdf", color = FALSE))
+      })
R> 
R> 
R> ###################################################
R> ### code chunk number 2: singlebook
R> ###################################################
R> book <- FALSE
R> 
R> 
R> ###################################################
R> ### code chunk number 3: packages
R> ###################################################
R> library("mgcv")
This is mgcv  1.5-5 . For overview type `help("mgcv-package")'.
R> library("mboost")
Loading required package: modeltools
Loading required package: stats4
Loading required package: party
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

Loading required package: sandwich
Loading required package: strucchange
Loading required package: vcd
Loading required package: colorspace
R> library("rpart")
R> 
R> 
R> ###################################################
R> ### code chunk number 4: GAM-men1500m-plot
R> ###################################################
R> plot(time ~ year, data = men1500m)
R> 
R> 
R> ###################################################
R> ### code chunk number 5: GAM-men1500m-lm
R> ###################################################
R> men1500m1900 <- subset(men1500m, year >= 1900)
R> men1500m_lm <- lm(time ~ year, data = men1500m1900)
R> plot(time ~ year, data = men1500m1900)
R> abline(men1500m_lm)
R> 
R> 
R> ###################################################
R> ### code chunk number 6: GAM-men1500m-smooth
R> ###################################################
R> x <- men1500m1900$year
R> y <- men1500m1900$time
R> men1500m_lowess <- lowess(x, y)
R> plot(time ~ year, data = men1500m1900)
R> lines(men1500m_lowess, lty = 2)
R> men1500m_cubic <- gam(y ~ s(x, bs = "cr"))
R> lines(x, predict(men1500m_cubic), lty = 3)
R> 
R> 
R> ###################################################
R> ### code chunk number 7: GAM-men1500m-quad
R> ###################################################
R> men1500m_lm2 <- lm(time ~ year + I(year^2),
+                     data = men1500m1900)
R> plot(time ~ year, data = men1500m1900)
R> lines(men1500m1900$year, predict(men1500m_lm2))
R> 
R> 
R> ###################################################
R> ### code chunk number 8: GAM-men1500m-pred
R> ###################################################
R> predict(men1500m_lm,
+          newdata = data.frame(year = c(2008, 2012)),
+          interval = "confidence")
       fit      lwr      upr
1 208.1293 204.8961 211.3624
2 206.8451 203.4325 210.2577
R> predict(men1500m_lm2,
+          newdata = data.frame(year = c(2008, 2012)),
+          interval = "confidence")
       fit      lwr      upr
1 214.2709 210.3930 218.1488
2 214.3314 209.8441 218.8187
R> 
R> 
R> ###################################################
R> ### code chunk number 9: GAM-USairpollution-boost
R> ###################################################
R> library("mboost")
R> USair_boost <- gamboost(SO2 ~ ., data = USairpollution)
R> USair_aic <- AIC(USair_boost)
R> USair_aic
[1] 6.809066
Optimal number of boosting iterations: 40 
Degrees of freedom (for mstop = 40): 9.048771 
R> 
R> 
R> ###################################################
R> ### code chunk number 10: GAM-USairpollution-boostplot
R> ###################################################
R> USair_gam <- USair_boost[mstop(USair_aic)]
R> layout(matrix(1:6, ncol = 3))
R> plot(USair_gam, ask = FALSE)
R> 
R> 
R> ###################################################
R> ### code chunk number 11: GAM-USairpollution-residplot
R> ###################################################
R> SO2hat <- predict(USair_gam)
R> SO2 <- USairpollution$SO2
R> plot(SO2hat, SO2 - SO2hat, type = "n", xlim = c(0, 110))
R> text(SO2hat, SO2 - SO2hat, labels = rownames(USairpollution),
+       adj = 0)
R> abline(h = 0, lty = 2, col = "grey")
R> 
R> 
R> ###################################################
R> ### code chunk number 12: GAM-kyphosis-plot
R> ###################################################
R> layout(matrix(1:3, nrow = 1))
R> spineplot(Kyphosis ~ Age, data = kyphosis,
+            ylevels = c("present", "absent"))
R> spineplot(Kyphosis ~ Number, data = kyphosis,
+            ylevels = c("present", "absent"))
R> spineplot(Kyphosis ~ Start, data = kyphosis,
+           ylevels = c("present", "absent"))
R> 
R> 
R> ###################################################
R> ### code chunk number 13: GAM-kyphosis-gam
R> ###################################################
R> kyphosis_gam <- gam(Kyphosis ~ s(Age, bs = "cr") +
+      s(Number, bs = "cr", k = 3) + s(Start, bs = "cr", k = 3),
+      family = binomial, data = kyphosis)
R> kyphosis_gam

Family: binomial 
Link function: logit 

Formula:
Kyphosis ~ s(Age, bs = "cr") + s(Number, bs = "cr", k = 3) + 
    s(Start, bs = "cr", k = 3)

Estimated degrees of freedom:
2.2267 1.2190 1.8420  total = 6.287681 

UBRE score: -0.2335850
R> 
R> 
R> ###################################################
R> ### code chunk number 14: GAM-kyphosis-gamplot
R> ###################################################
R> trans <- function(x)
+      binomial()$linkinv(x)
R> layout(matrix(1:3, nrow = 1))
R> plot(kyphosis_gam, select = 1, shade = TRUE, trans = trans)
R> plot(kyphosis_gam, select = 2, shade = TRUE, trans = trans)
R> plot(kyphosis_gam, select = 3, shade = TRUE, trans = trans)
R> 
R> 
R> 
