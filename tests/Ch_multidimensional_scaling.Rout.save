
R version 2.9.0 (2009-04-17)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###################################################
> ### code chunk number 1: setup
> ###################################################
> rm(list = ls())
> if (!file.exists("tables")) dir.create("tables")
> set.seed(290875)
> options(prompt = "R> ", continue = "+  ",
+     width = 63, # digits = 4,
+     show.signif.stars = FALSE,
+     SweaveHooks = list(leftpar = function()
+         par(mai = par("mai") * c(1, 1.05, 1, 1)),
+         bigleftpar = function()
+         par(mai = par("mai") * c(1, 1.7, 1, 1))))
R> HSAURpkg <- require("HSAUR2")
Loading required package: HSAUR2
Loading required package: lattice
Loading required package: MASS
Loading required package: scatterplot3d
R> if (!HSAURpkg) stop("cannot load package ", sQuote("HSAUR2"))
R> rm(HSAURpkg)
R>  ### </FIXME> hm, R-2.4.0 --vanilla seems to need this
R> a <- Sys.setlocale("LC_ALL", "C")
R>  ### </FIXME>
R> book <- TRUE
R> refs <- cbind(c("AItR", "DAGD", "SI", "CI", "ANOVA", "MLR", "GLM",
+                  "DE", "RP", "GAM", "SA", "ALDI", "ALDII", "SIMC", "MA", "PCA",
+                  "MDS", "CA"), 1:18)
R> ch <- function(x) {
+      ch <- refs[which(refs[,1] == x),]
+      if (book) {
+          return(paste("Chapter~\\\\ref{", ch[1], "}", sep = ""))
+      } else {
+          return(paste("Chapter~", ch[2], sep = ""))
+      }
+  }
R> if (file.exists("deparse.R"))
+      source("deparse.R")
R> setHook(packageEvent("lattice", "attach"), function(...) {
+      lattice.options(default.theme =
+          function()
+              standard.theme("pdf", color = FALSE))
+      })
R> 
R> 
R> ###################################################
R> ### code chunk number 2: singlebook
R> ###################################################
R> book <- FALSE
R> 
R> 
R> ###################################################
R> ### code chunk number 3: MDS-setup
R> ###################################################
R> x <- library("ape")
R> 
R> 
R> ###################################################
R> ### code chunk number 4: MDS-voles-cmdscale
R> ###################################################
R> data("watervoles", package = "HSAUR2")
R> voles_mds <- cmdscale(watervoles, k = 13, eig = TRUE)
Warning messages:
1: In cmdscale(watervoles, k = 13, eig = TRUE) :
  some of the first 13 eigenvalues are < 0
2: In sqrt(ev) : NaNs produced
R> voles_mds$eig
 [1]  7.359910e-01  2.626003e-01  1.492622e-01  6.990457e-02
 [5]  2.956972e-02  1.931184e-02  8.326673e-17 -1.139451e-02
 [9] -1.279569e-02 -2.849924e-02 -4.251502e-02 -5.255450e-02
[13] -7.406143e-02
R> 
R> 
R> ###################################################
R> ### code chunk number 5: MDS-voles-criterion1
R> ###################################################
R> sum(abs(voles_mds$eig[1:2]))/sum(abs(voles_mds$eig))
[1] 0.6708889
R> 
R> 
R> ###################################################
R> ### code chunk number 6: MDS-voles-criterion2
R> ###################################################
R> sum((voles_mds$eig[1:2])^2)/sum((voles_mds$eig)^2)
[1] 0.9391378
R> 
R> 
R> ###################################################
R> ### code chunk number 7: MDS-watervoles-plot
R> ###################################################
R> x <- voles_mds$points[,1]
R> y <- voles_mds$points[,2]
R> plot(x, y, xlab = "Coordinate 1", ylab = "Coordinate 2",
+       xlim = range(x)*1.2, type = "n")
R> text(x, y, labels = colnames(watervoles))
R> 
R> 
R> ###################################################
R> ### code chunk number 8: MDS-watervoles-mst
R> ###################################################
R> library("ape")
R> st <- mst(watervoles)
R> plot(x, y, xlab = "Coordinate 1", ylab = "Coordinate 2",
+       xlim = range(x)*1.2, type = "n")
R> for (i in 1:nrow(watervoles)) {
+      w1 <- which(st[i, ] == 1)
+      segments(x[i], y[i], x[w1], y[w1])
+  }
R> text(x, y, labels = colnames(watervoles))
R> 
R> 
R> ###################################################
R> ### code chunk number 9: MDS-voting
R> ###################################################
R> library("MASS")
R> data("voting", package = "HSAUR2")
R> voting_mds <- isoMDS(voting)
initial  value 15.268246 
iter   5 value 10.264075
final  value 9.879047 
converged
R> 
R> 
R> ###################################################
R> ### code chunk number 10: MDS-voting-plot
R> ###################################################
R> x <- voting_mds$points[,1]
R> y <- voting_mds$points[,2]
R> plot(x, y, xlab = "Coordinate 1", ylab = "Coordinate 2",
+       xlim = range(voting_mds$points[,1])*1.2, type = "n")
R> text(x, y, labels = colnames(voting))
R> voting_sh <- Shepard(voting[lower.tri(voting)],
+                       voting_mds$points)
R> 
R> 
R> ###################################################
R> ### code chunk number 11: MDS-voting-Shepard
R> ###################################################
R> plot(voting_sh, pch = ".", xlab = "Dissimilarity",
+       ylab = "Distance", xlim = range(voting_sh$x),
+       ylim = range(voting_sh$x))
R> lines(voting_sh$x, voting_sh$yf, type = "S")
R> 
R> 
R> 
